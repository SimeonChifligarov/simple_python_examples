from cryptography.fernet import Fernet

# –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–ª—é—á (–ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ)
key = Fernet.generate_key()
f = Fernet(key)

print('üîê Simple Encryptor')
print('–¢–µ–∫—É—â–∏—è—Ç –∫–ª—é—á (—Å–∞–º–æ –∑–∞ —Ç–∞–∑–∏ —Å–µ—Å–∏—è):')
print(key.decode())

while True:
    action = input('\n(e) –®–∏—Ñ—Ä–∏—Ä–∞–π | (d) –î–µ—à–∏—Ñ—Ä–∏—Ä–∞–π | (q) –ò–∑—Ö–æ–¥: ').lower()

    if action == 'e':
        text = input('–í—ä–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∑–∞ —à–∏—Ñ—Ä–∏—Ä–∞–Ω–µ: ')
        encrypted = f.encrypt(text.encode())
        print('üîí –®–∏—Ñ—Ä–∏—Ä–∞–Ω —Ç–µ–∫—Å—Ç:', encrypted.decode())

    elif action == 'd':
        token = input('–í—ä–≤–µ–¥–∏ —à–∏—Ñ—Ä–∏—Ä–∞–Ω–∏—è —Ç–µ–∫—Å—Ç: ')
        try:
            decrypted = f.decrypt(token.encode())
            print('üîì –î–µ—à–∏—Ñ—Ä–∏—Ä–∞–Ω —Ç–µ–∫—Å—Ç:', decrypted.decode())
        except Exception as e:
            print('‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω —Ç–µ–∫—Å—Ç –∏–ª–∏ –∫–ª—é—á.')

    elif action == 'q':
        print('üëã –ò–∑—Ö–æ–¥.')
        break

    else:
        print('‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞.')
